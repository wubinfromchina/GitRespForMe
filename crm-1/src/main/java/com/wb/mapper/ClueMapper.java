package com.wb.mapper;

import com.wb.pojo.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat May 14 18:47:05 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat May 14 18:47:05 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat May 14 18:47:05 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat May 14 18:47:05 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat May 14 18:47:05 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat May 14 18:47:05 CST 2022
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 保存创建的线索
     * @param clue
     * @return
     */
    Integer insertClue(Clue clue);

    /**
     * 查询所有线索展示到页面
     * @param map
     * @return
     */
    List<Clue> selectAllClueByCon(Map<String,Object> map);


    /**
     * 查询符合查询条件的总条数
     * @param map
     * @return
     */
    Integer selectCountByCon(Map<String,Object> map);

    /**
     * 根据用户选中的记录的主键删除记录
     */
    Integer deleteByIds(String[] ids);

    /**
     * 根据用户填入的信息更新记录
     * @param clue
     * @return
     */
    Integer updateClueByCon(Clue clue);

    /**
     * 用户点击线索名称超链接，查询该线索的明细
     * @param id
     * @return
     */
    Clue selectForDetailById(String id);

    /**
     * 查询线索
     * @param id
     * @return
     */
    Clue selectForById(String id);
}