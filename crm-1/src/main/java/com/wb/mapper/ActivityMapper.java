package com.wb.mapper;

import com.wb.pojo.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed May 11 17:22:06 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed May 11 17:22:06 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed May 11 17:22:06 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed May 11 17:22:06 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed May 11 17:22:06 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存创建的activity对象
     * @mbggenerated Wed May 11 17:22:06 CST 2022
     */
    int insertActivity(Activity activity);

    /**
     * 查询所有符合条件的activity
     */
    List<Activity> selectByPageNoAndPageSize(Map<String,Object> map);

    /**
     * 查询符合条件的activity总条数
     */
    Integer selectByAllCount(Map<String,Object> map);

    /**
     * 根据用户主键批量删除activity记录
     */
    Integer deleteActivityByIds(String[] ids);

    /**
     * 根据用户传入的新参数更新该条数据
     * @param
     * @return
     */
    Integer updateActivityByAllCon(Activity activity);

    /**
     * 查询所有市场活动
     * @return
     */
    List<Activity> selectAllAct();

    /**
     * 根据用户选择的数据导出
     * @return
     */
    List<Activity> selectActByCon(String[] ids);

    /**
     * 根据用户上传文件批量插入数据
     * @param activityList
     * @return
     */
    Integer insertByFile(List<Activity> activityList);

    //根据主键查询市场活动的明细，关联查询
    Activity selectDetailById(String id);

    //根据线索id查询相关联的市场活动
    List<Activity> selectActByClueId(String clueId);

    //根据市场活动名称模糊查询,并过滤已经关联过的市场活动
    List<Activity> selectAcctByName(Map<String,Object> map);

    //关联关系成功后调用该方法，返回有关联关系的市场活动
    List<Activity> selectActForDetailByIds(String[] ids);

    //根据市场活动名称模糊查询,并过滤没有关联过的市场活动
    List<Activity> selectActByNameClueId(Map<String,Object> map);

    //根据市场活动名称模糊查询
    List<Activity> selectActByName(String activityName);
}